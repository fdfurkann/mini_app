const en = {
  anasayfa: "Homepage",
  apiKeys: "My API Keys",
  addNew: "Add New",
  noApiKey: "No API key added yet. You can start by clicking the 'Add New' button.",
  trades: "Trades",
  signals: "Signals",
  channels: "Channels",
  partnership: "Partnership",
  subscription: "Subscription",
  adminLogin: "Admin Login",
  loading: "Loading...",
  telegramRequired: "You need to log in via Telegram to use this application.",
  goToTelegram: "Go to Telegram",
  dashboardTitle: "Dashboard",
  lastUpdate: "Last update",
  activeSignals: "Active Signals",
  activeSignalsDesc: "Signal to be processed",
  openTrades: "Open Trades",
  openTradesDesc: "You can monitor your ongoing trades here.",
  performance: "Performance",
  performanceDesc: "30-day P/L",
  apiStatus: "API Status",
  apiStatusDesc: "Active exchange",
  son_islemler: "Recent Trades",
  sizin_adiniza_gerceklesen_son_islemler: "Recent trades made on your behalf",
  signalsList: {
    title: "Recent Signals",
    description: "Recent trade signals from the channel",
    viewAll: "View all signals →"
  },
  buy: "BUY",
  sell: "SELL",
  unit: "unit",
  tradesList: { viewAll: "View all trades →" },
  entry: "Entry",
  usdt: "USDT",
  active: "ACTIVE",
  filled: "FILLED",
  cancelled: "CANCELLED",
  balanceChart: {
    title: "Balance History",
    balance: "Balance",
    description: "The change of your portfolio over time"
  },
  'backtest.title': 'Backtest',
  'backtest.channelSelect': 'Channel Selection',
  'backtest.channelSelectDescription': 'Select the signal channel to be used for backtest',
  'backtest.selectChannel': 'Select channel',
  'backtest.dateRange': 'Date Range',
  'backtest.dateRangeDescription': 'Select the date range for the backtest',
  'backtest.selectDateRange': 'Select date range',
  'backtest.autoTrade': 'Auto Trading',
  'backtest.autoTradeDescription': 'Automatically process signals',
  'backtest.entryAmount': 'Entry Amount',
  'backtest.entryAmountDescription': 'Amount to be used for each trade',
  'backtest.enterAmount': 'Enter amount',
  'backtest.usdt': 'USDT',
  'backtest.howMuchToEnter': 'How Many Dollars Do You Want to Enter the Trade With?',
  'backtest.enterAmountInfo1': 'Multiply the amount you want to enter by your chosen leverage and enter the result as the lot size.',
  'backtest.enterAmountInfo2': 'Example: If you want to enter a trade with $20 and 20X leverage: 20 × 20 = 400. In this case, you should enter 400 in the Lot section.',
  'backtest.leverage': 'Leverage',
  'backtest.leverageDescription': 'Leverage ratio for your trades',
  'backtest.safe': '1x (Safe)',
  'backtest.risky': '25x (Risky)',
  'backtest.tradeType': 'Trade Type',
  'backtest.tradeTypeDescription': 'Select the trade margin type',
  'backtest.isolated': 'ISOLATED',
  'backtest.cross': 'CROSS',
  'backtest.profitTradeSettings': 'Take Profit Settings',
  'backtest.profitTradeSettingsDescription': 'Select the trade closing strategy',
  'backtest.profitTradeSelect': 'Select take profit strategy',
  'backtest.closed': 'Closed',
  'backtest.percentage': 'Percentage of Balance',
  'backtest.fixedAmount': 'Fixed Amount',
  'backtest.tp': 'TP',
  'backtest.tpLevel': 'TP Level',
  'backtest.stopLossSettings': 'Stop Loss Settings',
  'backtest.stopLossSettingsDescription': 'Select the action after stop',
  'backtest.actionSelect': 'Select action',
  'backtest.trailStop': 'TrailStop',
  'backtest.costToWithdraw': 'Move to Cost',
  'backtest.specificLoss': 'Close at Specific Loss',
  'backtest.lossPercentage': 'Close at Loss (%)',
  'backtest.specificLossInfo': 'What is Close at Specific Loss?',
  'backtest.specificLossInfo1': 'This feature automatically closes your trade when it reaches a certain loss percentage.',
  'backtest.specificLossInfo2': 'For example, if you want the position to close when it has a 10% loss relative to the spot price, you just need to enter 10% in the relevant setting.',
  'backtest.costToWithdrawDescription': 'Select the move to cost level',
  'backtest.levelSelect': 'Select level',
  'backtest.none': 'None',
  'backtest.tp1': 'TP1',
  'backtest.tp2': 'TP2',
  'backtest.tp3': 'TP3',
  'backtest.tp4': 'TP4',
  'backtest.tp5': 'TP5',
  'backtest.costToWithdrawInfo': 'What is Move to Cost?',
  'backtest.costToWithdrawInfo1': 'When Take Profit Level 1 or 2 is reached, the Stop Loss order is moved to the entry level.',
  'backtest.costToWithdrawInfo2': 'With this system, risk management becomes safer while protecting gains.',
  'backtest.trailStopDescription': 'Select the TrailStop level',
  'backtest.trailStopInfo': 'What is Trail Stop?',
  'backtest.trailStopInfo1': 'A trail stop allows the Stop Loss level to automatically move up with the price as your trade becomes profitable.',
  'backtest.trailStopInfo2': 'The goal is to protect existing profits during market reversals.',
  'backtest.maxOrders': 'Max Order Amount',
  'backtest.maxOrdersDescription': 'Set the maximum number of orders',
  'backtest.startBacktest': 'Start Backtest',
  totalTrades: 'Total Trades',
  winRate: 'Win Rate',
  totalPL: 'Total P/L',
  averageTrade: 'Average Trade',
  openPositions: 'Open Positions',
  closedPositions: 'Closed Positions',
  cumulativeProfitLoss: 'Cumulative Profit/Loss',
  profitLossPerChannel: 'P/L by API over time',
  notEnoughData: 'Not enough data for the chart.',
  date: 'Date',
  previous: 'Previous',
  next: 'Next',
  page: 'Page',
  trendDirection: 'Trend Direction',
  symbol: "Symbol",
  entry1: 'Entry 1',
  entry2: 'Entry 2',
  sl: 'SL',
  tp1: 'TP1',
  tp2: 'TP2',
  tp3: 'TP3',
  tp4: 'TP4',
  tp5: 'TP5',
  tp6: 'TP6',
  tp7: 'TP7',
  tp8: 'TP8',
  tp9: 'TP9',
  tp10: 'TP10',
  entryPrice: "Entry Price",
  entryDate: "Entry Date",
  takeProfit: 'Take Profit',
  exitPrice: 'Exit Price',
  exitDate: 'Exit Date',
  profitLoss: 'Profit/Loss',
  allTime: 'All Time',
  last24: 'Last 24 Hours',
  last30: 'Last 30 Days',
  last7: 'Last 7 Days',
  channelSelect: 'Select channel',
  allChannels: 'All Channels',
  timeSelect: 'Select time',
  error: "Error",
  tradeHistory: 'Trade History',
  totalPnL: 'Total P/L',
  profitLossByApi: 'P/L by API',
  tradeSearch: 'Search trade...',
  allExchanges: 'All Exchanges',
  realizedPnL: 'Realized P/L',
  perCompletedTrade: 'per completed trade',
  profitableTrades: 'Profitable trades',
  ticket: 'Ticket',
  direction: "Direction",
  openPrice: 'Open Price',
  openTime: 'Open Time',
  volume: 'Volume',
  closePrice: 'Close Price',
  closeTime: 'Close Time',
  status: 'Status',
  completed: 'Completed',
  open: 'Open',
  allTrades: 'All Trades',
  'signals.title': 'Signals',
  'signals.activeSignals': 'Active Signals',
  'signals.signalHistory': 'Signal History',
  'signals.channel': 'Channel',
  'signals.symbol': 'Symbol',
  'signals.direction': 'Direction',
  'signals.openPrice': 'Open Price',
  'signals.openDate': 'Open Date',
  'signals.closePrice': 'Close Price',
  'signals.closeDate': 'Close Date',
  'signals.stopLoss': 'Stop Loss',
  'signals.takeProfit': 'Take Profit',
  'signals.profitLoss': 'Profit/Loss',
  'signals.totalTrades': 'TOTAL TRADES',
  'signals.winRate': 'WIN RATE',
  'signals.totalPL': 'TOTAL P/L',
  'signals.avgTrade': 'AVERAGE TRADE',
  'signals.openPositions': 'Open Positions',
  'signals.closedPositions': 'Closed Positions',
  'signals.cumulativePL': 'Cumulative P/L',
  'signals.plByChannel': 'P/L by channel over time',
  'signals.noChartData': 'Not enough data for the chart.',
  'signals.channelName': 'Channel Name:',
  'signals.trendDirection': 'Trend Direction:',
  'signals.entry1': 'Entry 1:',
  'signals.entry2': 'Entry 2:',
  'signals.sl': 'SL:',
  'signals.tp': 'TP',
  'backtest.noResults': 'No results found',
  'backtest.results': 'Backtest Results',
  'backtest.profitChart': 'Profit Chart',
  'backtest.simulationTrades': 'Simulation Trades',
  'backtest.lot': 'Lot',
  retry: 'Retry',
  goBack: "Go Back",
  channelOwnerApply: "Channel Owner Application",
  channelNamePlaceholder: "Enter channel name",
  channelLink: "Channel Link",
  followerCount: "Follower Count",
  fullName: "Full Name",
  email: "E-mail",
  phoneNumber: "Phone Number",
  ownerTelegram: "Telegram Username",
  agreementAccept: "I have read and accept the Partnership Agreement",
  submit: "Submit",
  submitting: "Submitting...",
  telegram_channels: "Telegram Channels",
  total_signals: "Total Signals",
  success_rate: "Success Rate",
  total_profit: "Total Profit",
  subscribers: "Subscribers",
  per_month: "month",
  channel_loading: "Loading channel information...",
  channel_not_found: "Channel information not found",
  back_to_channels: "Back to Channels",
  no_channels_found: "No channels found yet.",
  success: "Success",
  application_success: "Your application has been successfully submitted.",
  error_occurred: "An error occurred",
  accept_agreement_warning: "Please accept the Partnership Agreement.",
  fill_all_fields_warning: "Please fill in all fields.",
  confirmation_title: "Application Confirmed",
  confirmation_message: "Your application has been successfully received. We will contact you as soon as possible.",
  confirmation_return: "Return to Homepage",
  go_to_channel: "Go to Channel",
  subscribe: "Subscribe",
  closed_signals: "Closed Signals",
  cumulative_profit_loss: "Cumulative Profit/Loss",
  profit_loss_per_channel: "P/L by channel over time",
  total: "Total",
  openDate: "Open Date",
  closeDate: "Close Date",
  channelNameLabel: "Channel Name",
  subscription_title: "Subscription",
  adminMenu: "Admin Menu",
  members: "Members",
  memberNotifications: "Member Notifications",
  channelNotifications: "Channel Notifications",
  botChannels: {
    loadError: "Could not load Bot Channels",
    unknownDeleteError: "Unknown delete error",
    deleteError: "Delete operation failed",
    deleteSuccess: "Bot Channel deleted successfully",
    deleteErrorDetailed: "Error deleting Bot Channel: {{error}}",
    channelId: "Channel ID",
    channelName: "Channel Name",
    status: "Status",
    actions: "Actions",
    admin: "Admin",
    description: "Description",
    registerDate: "Register Date",
    channelImageAlt: "Channel Image",
    title: "Bot Channels",
    addChannel: "Add Channel",
    pageDescription: "View and manage registered bot channels in the system.",
    searchPlaceholder: "Search by channel name or ID...",
    deleteConfirmTitle: "Confirm Bot Channel Deletion",
    deleteConfirmDesc: "Are you sure you want to permanently delete this bot channel?",
    confirmDelete: "Yes, Delete",
  },
  subscriptions: "Subscriptions",
  subscriptionPackages: "Subscription Packages",
  'signalsList.title': "Recent Signals",
  'signalsList.description': "Recent trade signals from the channel",
  'signalsList.viewAll': "View all signals →",
  'tradesList.viewAll': "View all trades →",
  subscriptionHistory: "Subscription History",
  allActiveAndPastSubscriptions: "All your active and past subscriptions",
  ended: "Ended",
  start: "Start",
  end: "End",
  noSubscriptionFound: "You don't have a subscription yet.",
  upgradeToPremium: "Upgrade to Premium",
  monthlyPlan: "Monthly",
  monthlyAccess: "premium access for a month",
  selectPlan: "Select Plan",
  enterPassword: "Enter password",
  login: "Login",
  'Tüm sinyallere erişim': "Access to all signals",
  'Manuel trading': "Manual trading",
  'Temel destek': "Basic support",
  'Tanışma Paketi': "Welcome Package",
  'Öncelikli destek': "Priority support",
  '3 aylık indirim': "3-month discount",
  'Premium destek': "Premium support",
  '6 aylık indirim': "6-month discount",
  'VIP destek': "VIP support",
  'Yıllık indirim': "Annual discount",
  threeMonthPlan: "3-Month",
  sixMonthPlan: "6-Month",
  yearlyPlan: "Yearly",
  premiumAccess: "premium access for",
  accessAllSignals: "Access to all signals",
  manualTrading: "Manual trading",
  basicSupport: "Basic support",
  welcomePackage: "Welcome Package",
  prioritySupport: "Priority support",
  threeMonthDiscount: "3-month discount",
  premiumSupport: "Premium support",
  sixMonthDiscount: "6-month discount",
  vipSupport: "VIP support",
  annualDiscount: "Annual discount",
  'settings.title': 'API Settings',
  'settings.invalidId': 'Invalid ID',
  'settings.apiNotFound': 'API Not Found',
  'settings.loadingError': 'Loading Error',
  'settings.missingApiId': 'API ID Missing',
  'settings.autoTrade': 'Auto Trade',
  'settings.autoTradeDescription': 'Enable automatic trading feature',
  'settings.entryAmount': 'Trade Amount',
  'settings.entryAmountDescription': 'Amount to be used for each trade',
  'settings.entryAmountPlaceholder': 'Enter amount',
  'settings.usdt': 'USDT',
  'settings.entryAmountQuestion': 'What should the trade amount be?',
  'settings.entryAmountExplanation1': 'This is the initial amount to be used in each trade.',
  'settings.entryAmountExplanation2': 'Position size will vary based on the leverage ratio.',
  'settings.leverage': 'Leverage',
  'settings.leverageDescription': 'Leverage ratio to be used for your trades',
  'settings.safe': 'Safe',
  'settings.risky': 'Risky',
  'settings.tradeType': 'Trade Type',
  'settings.tradeTypeDescription': 'Margin type to be used for your trades',
  'settings.isolated': 'Isolated',
  'settings.cross': 'Cross',
  'settings.profitTradeSettings': 'Take Profit Settings',
  'settings.profitTradeSettingsDescription': 'Take profit levels and strategies',
  'settings.selectEntryType': 'Select entry type',
  'settings.closed': 'Closed',
  'settings.percentage': 'Percentage',
  'settings.fixedAmount': 'Fixed Amount',
  'settings.percentSymbol': '%',
  'settings.tp1': 'TP1',
  'settings.tp2': 'TP2',
  'settings.tp3': 'TP3',
  'settings.tp4': 'TP4',
  'settings.tp5': 'TP5',
  'settings.tp6': 'TP6',
  'settings.tp7': 'TP7',
  'settings.tp8': 'TP8',
  'settings.tp9': 'TP9',
  'settings.tp10': 'TP10',
  'settings.tpLevel': 'TP Level',
  'settings.stoplossTradeSettings': 'Stop Loss Settings',
  'settings.stoplossTradeSettingsDescription': 'Stop loss levels and strategies',
  'settings.selectStopLossStrategy': 'Select stop loss strategy',
  'settings.useSignalSL': 'Use Signal SL',
  'settings.customStopLoss': 'Custom Stop Loss',
  'settings.customStopLossInput': 'Stop Loss Level',
  'settings.customStopLossHelp': 'Percentage stop loss level based on the position entry price',
  'settings.stopLossActionSettings': 'Stop Loss Action Settings',
  'settings.stopLossActionDescription': 'Actions to be taken when stop loss is triggered',
  'settings.selectAction': 'Select Action',
  'settings.trailStopAction': 'Trailing Stop',
  'settings.costWithdrawAction': 'Move to Cost',
  'settings.specificLossAction': 'Close at Specific Loss',
  'settings.specificLossLabel': 'Loss Percentage',
  'settings.specificLossQuestion': 'How does this feature work?',
  'settings.specificLossExplanation': 'The position is automatically closed when the specified loss percentage is reached.',
  'settings.costWithdraw': 'Move to Cost',
  'settings.costWithdrawDescription': 'Move the stop loss level to cost when the profit target is reached',
  'settings.selectLevel': 'Select Level',
  'settings.none': 'None',
  'settings.costWithdrawQuestion': 'How does move to cost work?',
  'settings.costWithdrawExplanation1': 'When the selected TP level is reached, the stop loss level is moved to cost.',
  'settings.costWithdrawExplanation2': 'This way, you break even in the worst-case scenario.',
  'settings.costWithdrawExplanation3': 'If the market reverses, the profit is protected.',
  'settings.costWithdrawExplanation4': 'It is an important strategy for risk management.',
  'settings.trailStop': 'Trailing Stop',
  'settings.trailStopDescription': 'Automatically move the stop loss level up',
  'settings.trailStopQuestion': 'How does trailing stop work?',
  'settings.trailStopExplanation': 'When the selected TP level is reached, the stop loss is automatically moved into the profit zone and moves up as the price increases.',
  'settings.maxOrders': 'Maximum Orders',
  'settings.maxOrdersDescription': 'The maximum number of orders that can be open at the same time',
  'settings.save': 'Save',
  'settings.saving': 'Saving...',
  'settings.saveSuccess': 'Settings saved successfully.',
  'settings.saveError': 'An error occurred while saving settings.',
  addSignal: 'Add Signal',
  addNewSignal: 'Add New Signal',
  fillSignalDetails: 'Fill in signal details',
  exchange: "Exchange",
  side: "Direction",
  pnl: "P/L",
  action: "Action",
  close: "Close",
  trend: 'Trend',
  selectTrend: 'Select Trend',
  long: "LONG",
  short: "SHORT",
  stopLossPercentage: 'Stop Loss Percentage',
  entryRangePercentage: 'Entry Range Percentage',
  takeProfitCount: 'Take Profit Count',
  takeProfitRangePercentage: 'Take Profit Range Percentage',
  createSignal: 'Create Signal',
  signal_channels: "Signal Channels",
  addYourChannel: "Add Your Channel",
  welcomeMessage: "Welcome,",
  openTradesLabel: "trades in progress",
  apiStatusLabel: "exchange accounts connected",
  addApiKey: "Add API Key",
  noApiKeyCta: "You don't have an API key yet. Click to connect your exchange account.",
  noOpenTrades: "No open trades found",
  waiting: 'Waiting',
  closed: 'Closed',
  loginError: "Login Error",
  loginWithTelegram: "Login with Telegram",
  pleaseLoginWithTelegram: "Please log in via Telegram.",
  pageNotFound: "Oops! Page not found",
  returnToHome: "Return to Homepage",
  copied: "Copied",
  copiedToClipboard: "{{field}} copied to clipboard.",
  copyError: "Copy failed.",
  fillAllFields: "Please fill in all fields.",
  sessionNotFound: "Session information not found",
  userNotFound: "User not found",
  newApiKey: "New API Key:",
  addApiKeyError: "Could not add API key",
  newApiKeyNotFound: "New API key not found",
  apiKeyAdded: 'API key "{{name}}" has been added successfully.',
  apiKeyAddError: "Error while adding API key:",
  addNewApiKey: "Add New API Key",
  addNewApiKeyDesc: "Enter your exchange's API key information here. This information will be used for automated trading.",
  exchangeType: "Exchange Type",
  name: "Name",
  apiKeyNamePlaceholder: "e.g., Binance Futures",
  apiKeyNameDesc: "Enter a name to help you remember this key.",
  apiKeyPlaceholder: "Enter your API Key",
  apiSecretPlaceholder: "Enter your API Secret",
  apiSecretDesc: "Do not share your API key and secret with anyone.",
  signalChannel: "Signal Channel",
  searchChannelPlaceholder: "Search by channel name or ID...",
  selectedChannel: "Selected channel",
  subscriptionPackage: "Subscription Package",
  select: "Select",
  cancel: "Cancel",
  adding: "Adding...",
  save: "Save",
  apiKeyIdNotFound: "API key ID not found",
  apiKeyNotFound: "API key not found",
  apiKeyLoadError: "Error loading API key:",
  apiKeyLoadErrorText: "Could not load API key",
  apiKeyUpdated: 'API key "{{name}}" has been updated successfully.',
  apiKeyUpdateError: "Error while updating API key:",
  apiKeyUpdateErrorText: "Could not update API key.",
  editApiKey: "Edit API Key",
  editApiKeyDesc: "Update your exchange API key information.",
  saving: "Saving...",
  apiChannelDesc: "Select the signal channel for the API key to listen to.",
  deleteApiKeyConfirm: "Are you sure you want to delete this API key?",
  apiKeyDeleted: "API key deleted successfully.",
  apiKeyDeleteError: "Could not delete API key.",
  networkError: "Network response was not ok",
  fetchDetailsError: "Could not fetch details",
  deleteFailed: "Delete operation failed",
  apiKeyDeletedSuccess: "API key deleted successfully",
  adminApiKeys: {
    title: "API Keys",
    description: "View and manage user API keys.",
    searchPlaceholder: "Search by username or name...",
    user: "User",
    apiName: "API Name",
    apiType: "API Type",
    packageEnd: "Package End",
    channel: "Channel",
    packageStart: "Package Start",
    lotsize: "Lotsize",
    leverage: "Leverage",
    marginType: "Margin Type",
    maxOrders: "Max Orders",
    autoTrade: "Auto Trade",
    actions: "Actions",
    deleteConfirmTitle: "Confirm Deletion",
    deleteConfirmDesc: "Are you sure you want to permanently delete this API key? This action cannot be undone.",
  },
  on: "On",
  off: "Off",
  delete: "Delete",
  edit: "Edit",
  admin: {
    notLoggedIn: "You are not logged in as an admin or your session has expired. Please log in again.",
    faq: {
      addSuccess: "Question added successfully!",
      addError: "Could not add entry",
      addNewTitle: "Add New Question",
      addNewDesc: "You can add a new frequently asked question.",
      questionInfo: "Question Information",
      question: "Question",
      questionPlaceholder: "Write the question...",
      answer: "Answer",
      answerPlaceholder: "Write the answer...",
    }
  },
  fromLastMonth: "from last month",
  newTrades: "new trades",
  thisMonth: "this month",
  dashboard: "Dashboard",
  switchToLightMode: "Switch to light mode",
  switchToDarkMode: "Switch to dark mode",
  noTradeOnPage: "No trades to display on this page.",
  tradeRecordNotFound: "Trade record not found.",
  previousPage: "Previous Page",
  nextPage: "Next Page",
  filterByExchange: "Filter by Exchange",
  profit: "Profit",
  "faq.title": "FAQ",
  unknown: 'Unknown',
  tradeStatus: {
    waiting: "Waiting",
    open: "Open",
    completed: "Completed",
    failed: "Failed",
    unknown: "Unknown"
  },
  orderError: "Order Error: {{error}}",
};

export default en; 